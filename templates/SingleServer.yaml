heat_template_version: 2014-10-16

# This is an example template from iNNOVO to deploy a single instance
# To deploy this template, you can use the following command:
# openstack stack create -t example.yaml --parameter key_name=YOURPUBLICKEY NAME

description: A simple template to deploy your first stack including an instance

parameters:
    machine_name:
        type: string
        default: singleserver
    flavor_name:
        type: string
        default: m1.micro
    key_name:
        type: string
    public_network_id:
        type: string
        default: provider
    availability_zone:
        type: string
        default: ix1

resources:
    enable_ssh:
        type: OS::Neutron::SecurityGroup
        properties:
            description: enables incoming SSH traffic and also ICMP, without any expectations
            name: enable_ssh
            rules:
                - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 22, port_range_max: 22, protocol: tcp }
                - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, protocol: icmp }

    enable_traffic:
        type: OS::Neutron::SecurityGroup
        properties:
            description: enables traffic via http and https, without any expectations
            name: enable_traffic
            rules:
                - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 80, port_range_max: 80, protocol: tcp }
                - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 443, port_range_max: 443, protocol: tcp }

    internal_network_id:
        type: OS::Neutron::Net
        properties:
            name: single_internal_network

    port:
        type: OS::Neutron::Port
        properties:
            network: { get_resource: internal_network_id }
            security_groups:
                - get_resource: enable_ssh
                - get_resource: enable_traffic

    subnet:
        type: OS::Neutron::Subnet
        properties:
            name: single_internal_subnet
            dns_nameservers:
            - 8.8.8.8
            - 8.8.4.4
            network: { get_resource: internal_network_id }
            ip_version: 4
            cidr: 10.0.0.0/24
            allocation_pools:
            - { start: 10.0.0.10, end: 10.0.0.250 }

    router:
        type: OS::Neutron::Router
        properties:
            external_gateway_info: { "network": { get_param: public_network_id }}
            name: single_router

    router_subnet_bridge:
        type: OS::Neutron::RouterInterface
        depends_on: subnet
        properties:
            router: { get_resource: router }
            subnet: { get_resource: subnet }

    floating_ip:
        type: OS::Neutron::FloatingIP
        depends_on: router
        properties:
            floating_network: { get_param: public_network_id }
            port_id: { get_resource: port }

    host:
        type: OS::Nova::Server
        properties:
            name: { get_param: machine_name }
            availability_zone: { get_param: availability_zone }
            image: Ubuntu 16.04 Xenial Xerus - Latest
            key_name: { get_param: key_name }
            flavor: { get_param: flavor_name }
            user_data_format: RAW
            networks:
                - port: { get_resource: port }

outputs:
    instance_name:
        description: name of instance
        value: { get_attr: [ host, name ] }
    instance_ip:
        description: IP address of instance
        value: { get_attr: [ host, first_address ] }
    instance_fip:
        description: External IP address of instance
        value: { get_attr: [ floating_ip, floating_ip_address] }
